 
 1          OPTIONS NONOTES NOSTIMER NOSOURCE NOSYNTAXCHECK;
 72         
 73         /**
 74         \file
 75         \ingroupmodule group
 76         
 77         \briefbrief description
 78         
 79         Exercise 1 for homework assignment 4;
 80         
 81         \version\$Revision: 1.0 $
 82         \author\$Author: Andrew Marshall $
 83         \date\$Date:2018-06-19 $
 84         
 85         /* options macrogen symbolgen mprint mlogic; */
 86         
 87         /*
 88          * General Instructions.
 89          * This file includes unit test code for Exercise 1 and 2. It's
 90          * not practical to code these exercises in macro language, so I'm
 91          * including only the IML unit tests.
 92          *
 93          * The same restrictions apply to IML as stated in the R markdown.
 94          * Use the macro below to declare data and constants in the appropriate
 95          * IML blocks. I've created one block in this template, but you can divide
 96          * into smaller blocks if you wish.
 97          *
 98          *
 99          */
 100        %let unit_test_points = 0;
 101        
 102        %macro Homework4Data;
 103          Year = {1936 1946 1951 1963 1975 1997 2006};
 104          CaloriesPerRecipeMean = {2123.8 2122.3 2089.9 2250.0 2234.2 2249.6 3051.9};
 105          CaloriesPerRecipeSD = {1050.0 1002.3 1009.6 1078.6 1089.2 1094.8 1496.2};
 106          CaloriesPerServingMean = {268.1 271.1 280.9 294.7 285.6 288.6 384.4};
 107        
 108          CaloriesPerServingSD = {124.8 124.2 116.2 117.7 118.3 122.0 168.3};
 109          ServingsPerRecipeMean = {12.9 12.9 13.0 12.7 12.4 12.4 12.7};
 110          ServingsPerRecipeSD = {13.3 13.3 14.5 14.6 14.3 14.3 13.0};
 111          sample_size = 18;
 112          tenth_increment = 0.10;
 113          hundredth_increment = 0.100;
 114          idx_1936 = 1;
 115          idx_2006 = dimension(CaloriesPerRecipeMean)[2];
 116          idxs36_07 = {idx_1936, idx_2006};
 117          alpha=0.05;
 118        %mend;
 119        
 120        proc iml;
 NOTE: IML Ready
 121          %Homework4Data;
 122        
 123        title 'Exercise 1';
 124        /* Optional - see R Markdown  */
 125        
 126          /* Exercise 1 IML Code Here */
 127        
 128           /*
 129           Secondary matrix for Calories per Recipe Mean values; m_2
 130           */
 131          m_2 = CaloriesPerRecipeMean//CaloriesPerRecipeMean//CaloriesPerRecipeMean//CaloriesPerRecipeMean
 132          //CaloriesPerRecipeMean//CaloriesPerRecipeMean//CaloriesPerRecipeMean;
 133          print(m_2);
 134        
 135           /*
 136          Primary matrix for Calories per Recipe Mean values (transposed matrix m_2); m_1
 137           */
 138          m_1 = m_2`;
 139          print(m_1);
 140        
 141          /*
 142          Secondary matrix for Calories per Recipe Standard Deviation values; s_2
 143           */
 144        
 145          s_2 = CaloriesPerRecipeSD//CaloriesPerRecipeSD//CaloriesPerRecipeSD//CaloriesPerRecipeSD
 146          //CaloriesPerRecipeSD//CaloriesPerRecipeSD//CaloriesPerRecipeSD;
 147          print(s_2);
 148        
 149          /*
 150          Primary matrix for Calories per Recipe Standard Deviation values (transposed s_2); s_1
 151           */
 152          s_1 = s_2`;
 153          print(s_1);
 154        
 155          /*
 156           Cohen's d function for use with newly created matrices m_1,m_2,s_1,s_2
 157           */
 158          d_12 = 0;
 159          start d_12CPR(m_1,m_2,s_1,s_2);
 160          d_12_var = (abs(m_1-m_2)) / (sqrt((s_1##2 + s_2##2)/2));
 161          return(d_12_var);
 162          finish d_12CPR;
 NOTE: Module D_12CPR defined.
 163          dmat = d_12CPR(m_1,m_2,s_1,s_2);
 164          d_12 = max(dmat[idx_1936,idx_2006]);
 165          print(d_12);
 166        
 167        
 168          /*Exercise 1 unit test, IML code */
 169        
 170          if(abs(d_12-0.7181)<0.0001) then
 171            do;
 172              local_unit_test_points = &unit_test_points + 4;
 173              print(local_unit_test_points);
 174              call symput("unit_test_points", char(local_unit_test_points));
 175            end;
 176           else
 177            do;
 178              print 'd_12 is not assigned the correct value';
 179            end;
 180        
 181        title 'Exercise 2';
 182        /* Optional - see R Markdown  */
 183        
 184           /* Exercise 2 IML Code Here
 185        
 186          l_1 = 0;
 187          l_2 = 0;
 188          print(l_1);
 189          print(l_2);
 190          */
 191          /* Exercise 2 unit test, IML code
 192        
 193          local_unit_test_points = &unit_test_points;
 194        
 195          if(abs(l_1-0.396952)<1e-6) then;
 196            do;
 197              local_unit_test_points = local_unit_test_points + 2;
 198              print(local_unit_test_points);
 199            end;
 200        
 201          if(abs(l_2-0.391043)<1e-6) then;
 202            do;
 203              local_unit_test_points = local_unit_test_points + 2;
 204              print(local_unit_test_points);
 205            end;
 206        
 207          call symput("unit_test_points", char(local_unit_test_points));
 208          */
 209        
 210        title 'Exercise 3';
 211        /* Optional - see R Markdown  */
 212        
 213          /* Create a data set for comparison with proc GLM;
 214           Uncommented this block and the proc reg block below
 215           if you choose this exercise
 216           create Ex4Data var {CaloriesPerRecipeMean CaloriesPerServingMean};
 217           append;
 218           close Ex4Data;
 219        */
 220        title 'Exercise 4';
 221        /* Optional - see R Markdown  */
 222        
 223        title 'Exercise 5';
 224        /* Optional - see R Markdown  */
 225        
 226        title 'Exercise 6';
 227        /* Optional - see R Markdown  */
 228        
 229        /* Total points from unit tests */
 230        title 'Unit Test Points';
 231          print(&unit_test_points);
 232        quit;
 NOTE: Exiting IML.
 NOTE: PROCEDURE IML used (Total process time):
       real time           0.08 seconds
       user cpu time       0.09 seconds
       system cpu time     0.00 seconds
       memory              2570.46k
       OS Memory           32676.00k
       Timestamp           06/22/2018 05:53:37 AM
       Step Count                        81  Switch Count  7
       Page Faults                       0
       Page Reclaims                     322
       Page Swaps                        0
       Voluntary Context Switches        67
       Involuntary Context Switches      0
       Block Input Operations            0
       Block Output Operations           24
       
 
 233        
 234        /*
 235        Run this code if you selected exercise 4
 236        
 237        proc reg data = Ex4Data plots=none;
 238          model CaloriesPerRecipeMean = CaloriesPerServingMean;
 239        run;
 240        */
 241        
 242        OPTIONS NONOTES NOSTIMER NOSOURCE NOSYNTAXCHECK;
 255        
